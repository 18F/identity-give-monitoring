---
# This workflow will run unit tests and deploy the application to a target environment

name: Deploy

on:
  push:
    branches:
      - main
    tags:
      - '*'
    paths-ignore:
      - '**.md'  # All markdown files in the repository
  release:
    types: [released]

jobs:
  check-config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Prometheus
        run: ./install_prometheus.sh

      - name: Validate Prometheus Config
        run: ./promtool check config prometheus.yml

  deploy:
    if: github.repository_owner == '18F'
    needs: check-config
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: 18F/identity-give-cf-setup@v1
        id: cf-setup
        with:
          cf-username: ${{ secrets.CF_USERNAME }}
          cf-password: ${{ secrets.CF_PASSWORD }}
          cf-org: ${{ secrets.CF_ORG }}

      - name: Generate config files
        run: |
          envsubst < prometheus-config.yml > prometheus.yml
          envsubst < alerts/alert-config.yml > alerts/alertmanager.yml
        env:
          ENVIRONMENT_NAME: ${{ steps.cf-setup.outputs.target-environment }}
          SLACK_URL: ${{ secrets.SLACK_URL }}

      # Deploy the main 'monitoring' prometheus application
      - name: Deploy application
        run: cf push --vars-file vars.yaml
          --var ENVIRONMENT_NAME=${{ steps.cf-setup.outputs.target-environment }}
          --strategy rolling

      # Deploy the prometheus alertmanager
      - name: Deploy alerts
        run: cf push -f manifest-alerts.yaml
          --var ENVIRONMENT_NAME=${{ steps.cf-setup.outputs.target-environment }}
          --var SLACK_URL=${{ secrets.SLACK_URL }}
          --memory 64MB
          --instances 2

      - name: Apply CF Network Policies
        run: |
          cf add-network-policy monitoring alerts
          cf add-network-policy monitoring cf-metrics
          cf add-network-policy monitoring api-gateway --port 8100 --protocol tcp
