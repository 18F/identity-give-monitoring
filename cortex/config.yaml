---
auth_enabled: false

server:
  http_listen_port: ${PORT}
  http_tls_config:
    cert_file: ${CF_INSTANCE_CERT}
    key_file: ${CF_INSTANCE_KEY}

  # Configure the server to allow messages up to 100MB.
  grpc_server_max_recv_msg_size: 104857600
  grpc_server_max_send_msg_size: 104857600
  grpc_server_max_concurrent_streams: 1000

distributor:
  shard_by_all_labels: true
  pool:
    health_check_ingesters: true
  ha_tracker:
    enable_ha_tracker: true
    kvstore:
      store: inmemory

ingester_client:
  grpc_client_config:
    # Configure the client to allow messages up to 100MB.
    max_recv_msg_size: 104857600
    max_send_msg_size: 104857600
    grpc_compression: gzip

ingester:
  lifecycler:
    # The address to advertise for this ingester.  Will be autodiscovered by
    # looking up address on eth0 or en0; can be specified if this fails.
    # address: 127.0.0.1

    # We want to start immediately and flush on shutdown.
    join_after: 0
    min_ready_duration: 0s
    final_sleep: 0s
    num_tokens: 512

    # Use an in memory ring store, so we don't need to launch a Consul.
    ring:
      kvstore:
        store: inmemory
      replication_factor: 1

storage:
  engine: blocks

blocks_storage:
  tsdb:
    dir: /tmp/cortex/tsdb

  bucket_store:
    sync_dir: /tmp/cortex/tsdb-sync

  # You can choose between local storage and Amazon S3, Google GCS and Azure
  # storage. Each option requires additional configuration as shown below. All
  # options can be configured via flags as well which might be handy for secret
  # inputs.
  backend: s3  # s3, gcs, azure or filesystem are valid options
  s3:
    bucket_name: ${BUCKET_NAME}
    endpoint: s3-fips.us-gov-west-1.amazonaws.com
    region: ${AWS_REGION}
    # Configure your S3 credentials below.
    secret_access_key: ${SECRET_ACCESS_KEY}
    access_key_id: ${ACCESS_KEY_ID}

compactor:
  data_dir: /tmp/cortex/compactor
  sharding_ring:
    kvstore:
      store: inmemory

frontend_worker:
  match_max_concurrent: true
